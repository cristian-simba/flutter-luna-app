import 'package:flutter/material.dart';
import 'package:luna/screens/profile/profile.dart';
import 'package:luna/screens/analytics/analytics.dart';
import 'package:luna/screens/calendary/calendary.dart';
import 'package:luna/screens/diary/diary.dart';
import 'package:provider/provider.dart';
import 'package:luna/providers/icon_color_provider.dart';
import 'package:luna/constants/colors.dart';
import 'package:luna/screens/diary/components/buttons/add_diary.dart';

class Navbar extends StatefulWidget {
  const Navbar({Key? key}) : super(key: key);

  @override
  State createState() => _NavbarState();
}

class _NavbarState extends State {
  int _selectedIndex = 0;

  final List<_NavbarItem> _navbarItems = [
    _NavbarItem(icon: Icons.menu_book_rounded, label: 'Diario', screen: const Diary()),
    _NavbarItem(icon: Icons.calendar_month_rounded, label: 'Calendario', screen: const Calendary()),
    _NavbarItem(icon: Icons.analytics_rounded, label: 'Anal√≠ticas', screen: const Analytics()),
    _NavbarItem(icon: Icons.account_circle_rounded, label: 'Perfil', screen: const Profile()),
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {
    final ThemeData theme = Theme.of(context);
    final iconColor = Provider.of<IconColorProvider>(context).iconColor;

    return Scaffold(
      body: IndexedStack(
        index: _selectedIndex,
        children: _navbarItems.map((item) => item.screen).toList(),
      ),
      floatingActionButton: AddDiary(
        iconColor: iconColor,
        onEntryAdded: () => setState(() {}),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,
      bottomNavigationBar: _buildBottomNavigationBar(theme, iconColor),
    );
  }

  Widget _buildBottomNavigationBar(ThemeData theme, Color iconColor) {
    return BottomAppBar(
      shape: const CircularNotchedRectangle(),
      notchMargin: 6.0,
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          _buildNavBarItem(_navbarItems[0], 0, iconColor),
          _buildNavBarItem(_navbarItems[1], 1, iconColor),
          const SizedBox(width: 40), // Espacio para el FAB
          _buildNavBarItem(_navbarItems[2], 2, iconColor),
          _buildNavBarItem(_navbarItems[3], 3, iconColor),
        ],
      ),
    );
  }

  Widget _buildNavBarItem(_NavbarItem item, int index, Color iconColor) {
    return Expanded(
      child: GestureDetector(
        onTap: () => _onItemTapped(index),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(
              item.icon,
              color: _selectedIndex == index ? iconColor : Colors.grey[400],
            ),
            Text(
              item.label,
              style: TextStyle(
                color: _selectedIndex == index ? iconColor : Colors.grey[400],
                fontSize: 12.0,
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class _NavbarItem {
  final IconData icon;
  final String label;
  final Widget screen;

  const _NavbarItem({required this.icon, required this.label, required this.screen});
}
